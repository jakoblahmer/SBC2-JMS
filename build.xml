<?xml version="1.0" encoding="UTF-8"?>
<project name="SBC2_JMS" default="compile" basedir=".">
    
    <property environment="env"/>
    <property name="glassfish.home" value="${env.GLASSFISH_HOME}"/>
    <property name="domain.dir" value="${glassfish.home}/domains/domain1"/>
    <property name="admin.cli.jar" value="${glassfish.home}/modules/admin-cli.jar"/>
    
	<property name="src.dir" value="src"/>
    <property name="build.dir" value="build"/>
	<property name="libGlobal.dir" value="../SBC2-GLOBAL/lib"/>
	<property name="distGlobal.dir" value="../SBC2-GLOBAL/dist"/>
    
    <path id="classpath">
        <fileset dir="${glassfish.home}/lib">
            <include name="javaee.jar"/>
            <include name="appserv-rt.jar"/>
            <include name="gf-client.jar"/>
        </fileset>
		<fileset dir="${libGlobal.dir}" includes="**/*.jar" />
		<fileset dir="${distGlobal.dir}" includes="**/*.jar" />
    	<pathelement location="${build.dir}"/>
    </path>
    
    <target name="compile">
        <mkdir dir="${build.dir}"/>
        <javac srcdir="${src.dir}"
               destdir="${build.dir}"
               debug="on"
               deprecation="on"
               classpathref="classpath"/>
		<copy file="${src.dir}/log4j.properties" tofile="${build.dir}/log4j.properties"/>
    </target>

	
	<!-- BENCHMARK SERVER -->
	<target name="run-benchmark" depends="compile">
		<java classname="sbc.benchmark.BenchmarkServer" 
			fork="true"
			classpathref="classpath">
			<arg line="4444 1"/>
		</java>
	</target>
	
	<target name="run-benchmarkAdmin" depends="compile">
		<java classname="sbc.admin.Admin" 
			fork="true"
			classpathref="classpath">
			<arg line="1 sbc false 1 1"/>
		</java>
	</target>
	
	
	<target name="run-admin" depends="compile">
	    <java classname="sbc.admin.Admin" 
	          fork="true"
	          classpathref="classpath">
			<arg line="1 sbc"/>
		</java>
    </target>
	
	<!--
	
	FACTORIES
	
	ID-definition:
	
	The first digit of an ID stands for the factory
	the second digit of an ID stands for the worker / producer
	the third for the enumeration (enumeration starts with 0):
	
	factory1: 1
	factory2: 2
	factory3: 3
	
	chicken:			1
	chocolateRabbit:	2
	colorRabbit:		3
	testRabbit:			4
	logisticRabbit:		5
	buildRabbit:		6
	loadBalancerRabbit: 7
	
	-->
	
	<!-- factory 1 producers -->
	<target name="run-factory1-producer" depends="compile">
		<parallel failonany="true">
			<!-- 3 chicken -->
	        <java classname="sbc.producer.Chicken" 
	              fork="true"
	              classpathref="classpath">
	        	<arg line="110 1 sbc"/>
			</java>
	        <java classname="sbc.producer.Chicken" 
	              fork="true"
	              classpathref="classpath">
	        	<arg line="111 1 sbc"/>
			</java>
	        <java classname="sbc.producer.Chicken" 
	              fork="true"
	              classpathref="classpath">
	        	<arg line="111 1 sbc"/>
			</java>
			
			<!-- 2 chocobunnies -->
	        <java classname="sbc.producer.ChocolateRabbitRabbit" 
	              fork="true"
	              classpathref="classpath">
	        	<arg line="120 1 sbc"/>
			</java>
	        <java classname="sbc.producer.ChocolateRabbitRabbit" 
	              fork="true"
	              classpathref="classpath">
	        	<arg line="121 1 sbc"/>
			</java>
		</parallel>
	</target>
	
	<!-- factory 1 workers -->
	<target name="run-factory1-workers" depends="compile">
		<parallel failonany="true">
			<!-- 10 color rabbits -->
	        <java classname="sbc.worker.ColorRabbit" 
	              fork="true"
	              classpathref="classpath">
	        	<arg line="130 sbc RED"/>
			</java>
	        <java classname="sbc.worker.ColorRabbit" 
	              fork="true"
	              classpathref="classpath">
	        	<arg line="131 sbc GREEN"/>
			</java>
		    <java classname="sbc.worker.ColorRabbit" 
		          fork="true"
		          classpathref="classpath">
		    	<arg line="132 sbc BLUE"/>
			</java>
	        <java classname="sbc.worker.ColorRabbit" 
	              fork="true"
	              classpathref="classpath">
	        	<arg line="133 sbc YELLOW"/>
			</java>
	        <java classname="sbc.worker.ColorRabbit" 
	              fork="true"
	              classpathref="classpath">
	        	<arg line="134 sbc RED"/>
			</java>
	        <java classname="sbc.worker.ColorRabbit" 
	              fork="true"
	              classpathref="classpath">
	        	<arg line="135 sbc GREEN"/>
			</java>
		    <java classname="sbc.worker.ColorRabbit" 
		          fork="true"
		          classpathref="classpath">
		    	<arg line="136 sbc BLUE"/>
			</java>
	        <java classname="sbc.worker.ColorRabbit" 
	              fork="true"
	              classpathref="classpath">
	        	<arg line="137 sbc YELLOW"/>
			</java>
	        <java classname="sbc.worker.ColorRabbit" 
	              fork="true"
	              classpathref="classpath">
	        	<arg line="138 sbc RED"/>
			</java>
	        <java classname="sbc.worker.ColorRabbit" 
	              fork="true"
	              classpathref="classpath">
	        	<arg line="139 sbc GREEN"/>
			</java>
			
			<!-- 2 testbunnies -->
	        <java classname="sbc.worker.TestRabbit" 
	              fork="true"
	              classpathref="classpath" failonerror="true">
	        	<arg line="140 sbc"/>
			</java>
	        <java classname="sbc.worker.TestRabbit" 
	              fork="true"
	              classpathref="classpath">
	        	<arg line="141 sbc"/>
			</java>
			
			<!-- 1 logistic rabbit -->
	        <java classname="sbc.worker.LogisticRabbit" 
	              fork="true"
	              classpathref="classpath" failonerror="true">
	        	<arg line="150 sbc"/>
			</java>
			
			<!-- 2 build rabbits -->
		    <java classname="sbc.worker.BuildRabbit" 
		          fork="true"
		          classpathref="classpath">
		    	<arg line="161 sbc"/>
			</java>
	        <java classname="sbc.worker.BuildRabbit" 
	              fork="true"
	              classpathref="classpath">
	        	<arg line="162 sbc"/>
			</java>
		</parallel>
	</target>
	
	
    <target name="run-loadBalancingRabbit" depends="compile">
        <java classname="sbc.loadbalancing." 
              fork="true"
              classpathref="classpath">
        	<arg line="470 sbc"/>
		</java>
    </target>
	
    <target name="clean" depends="flushAll">
        <delete dir="${build.dir}"/>
    </target>
    
	<target name="flushAll">
		<!-- factory 1 -->
		<java jar="${admin.cli.jar}" fork="true" spawn="false">
			<arg line="flush-jmsdest --desttype queue sbc.color.queue"/>
		</java>
		<java jar="${admin.cli.jar}" fork="true" spawn="false">
			<arg line="flush-jmsdest --desttype queue sbc.build.queue"/>
		</java>
		<java jar="${admin.cli.jar}" fork="true" spawn="false">
			<arg line="flush-jmsdest --desttype queue sbc.logistic.queue"/>
		</java>
		<java jar="${admin.cli.jar}" fork="true" spawn="false">
			<arg line="flush-jmsdest --desttype queue sbc.test.queue"/>
		</java>
		<java jar="${admin.cli.jar}" fork="true" spawn="false">
			<arg line="flush-jmsdest --desttype queue sbc.gui.queue"/>
		</java>
		<java jar="${admin.cli.jar}" fork="true" spawn="false">
			<arg line="flush-jmsdest --desttype queue bench.result.queue"/>
		</java>
		<java jar="${admin.cli.jar}" fork="true" spawn="false">
			<arg line="flush-jmsdest --desttype topic bench.topic"/>
		</java>
		
		<!-- factory 2 -->
		<java jar="${admin.cli.jar}" fork="true" spawn="false">
			<arg line="flush-jmsdest --desttype queue sbc1.color.queue"/>
		</java>
		<java jar="${admin.cli.jar}" fork="true" spawn="false">
			<arg line="flush-jmsdest --desttype queue sbc1.build.queue"/>
		</java>
		<java jar="${admin.cli.jar}" fork="true" spawn="false">
			<arg line="flush-jmsdest --desttype queue sbc1.logistic.queue"/>
		</java>
		<java jar="${admin.cli.jar}" fork="true" spawn="false">
			<arg line="flush-jmsdest --desttype queue sbc1.test.queue"/>
		</java>
		<java jar="${admin.cli.jar}" fork="true" spawn="false">
			<arg line="flush-jmsdest --desttype queue sbc1.gui.queue"/>
		</java>
		<java jar="${admin.cli.jar}" fork="true" spawn="false">
			<arg line="flush-jmsdest --desttype queue bench.result.queue"/>
		</java>
		<java jar="${admin.cli.jar}" fork="true" spawn="false">
			<arg line="flush-jmsdest --desttype topic bench.topic"/>
		</java>
		
		<!-- factory 3 -->
		<java jar="${admin.cli.jar}" fork="true" spawn="false">
			<arg line="flush-jmsdest --desttype queue sbc2.color.queue"/>
		</java>
		<java jar="${admin.cli.jar}" fork="true" spawn="false">
			<arg line="flush-jmsdest --desttype queue sbc2.build.queue"/>
		</java>
		<java jar="${admin.cli.jar}" fork="true" spawn="false">
			<arg line="flush-jmsdest --desttype queue sbc2.logistic.queue"/>
		</java>
		<java jar="${admin.cli.jar}" fork="true" spawn="false">
			<arg line="flush-jmsdest --desttype queue sbc2.test.queue"/>
		</java>
		<java jar="${admin.cli.jar}" fork="true" spawn="false">
			<arg line="flush-jmsdest --desttype queue sbc2.gui.queue"/>
		</java>
		<java jar="${admin.cli.jar}" fork="true" spawn="false">
			<arg line="flush-jmsdest --desttype queue bench.result.queue"/>
		</java>
		<java jar="${admin.cli.jar}" fork="true" spawn="false">
			<arg line="flush-jmsdest --desttype topic bench.topic"/>
		</java>
	</target>
	
</project>
